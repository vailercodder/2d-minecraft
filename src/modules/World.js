import { axe, pickaxe, shovel, deathwing } from "./Tool.js";
import Player from "./Player.js";

const tools = { axe, pickaxe, shovel, deathwing };

class World {
  constructor() {
    this.gridSize = { rows: 20, cols: 20 };
    this.tiles = [
      // world layout
      [
        "S",
        "S",
        "S",
        "S",
        "C",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
      ],
      [
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
      ],
      [
        "G",
        "G",
        "G",
        "G",
        "G",
        "G",
        "G",
        "G",
        "G",
        "G",
        "G",
        "G",
        "G",
        "G",
        "G",
        "G",
        "G",
        "G",
        "G",
        "G",
      ],
      [
        "D",
        "D",
        "D",
        "D",
        "T",
        "D",
        "D",
        "D",
        "D",
        "D",
        "D",
        "D",
        "D",
        "D",
        "D",
        "D",
        "D",
        "D",
        "D",
        "D",
      ],
      [
        "D",
        "D",
        "D",
        "D",
        "D",
        "D",
        "D",
        "D",
        "D",
        "D",
        "D",
        "D",
        "D",
        "D",
        "D",
        "D",
        "D",
        "D",
        "D",
        "D",
      ],
      [
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
      ],
      [
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
      ],
      [
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
      ],
      [
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
      ],
      [
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
      ],
      [
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
      ],
      [
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
      ],
      [
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
      ],
      [
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
      ],
      [
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
      ],
      [
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
      ],
      [
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
      ],
      [
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
      ],
      [
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
      ],
      [
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
        "S",
      ],
    ];
    this.player = new Player();
  }

  generateWorld() {
    const worldElement = document.querySelector(".world");
    worldElement.innerHTML = "";

    for (let row = 0; row < this.gridSize.rows; row++) {
      for (let col = 0; col < this.gridSize.cols; col++) {
        const tile = document.createElement("div");
        tile.classList.add("tile");

        const tileType = this.tiles[row][col];
        if (tileType === "S") {
          tile.classList.add("sky");
        } else if (tileType === "G") {
          tile.classList.add("grass");
        } else if (tileType === "D") {
          tile.classList.add("dirt");
        } else if (tileType === "C") {
          tile.classList.add("cloud");
        } else if (tileType === "T") {
          tile.classList.add("tree");
        } else if (tileType === "O") {
          tile.classList.add("ore");
        } else if (tileType === "ST") {
          tile.classList.add("stone");
        }

        tile.addEventListener("click", (event) => {
          const selectedTool = document.querySelector(".selected-tool");
          if (selectedTool) {
            const toolName = selectedTool.getAttribute("data-tool");
            if (toolName) {
              const tool = tools[toolName];
              if (tool) {
                tool.useTool(tile, this.player);
                console.log(this.player.getStats());
              }
            }
          } else {
            console.log("Tile clicked without tool, attempting to place tile.");
            this.player.placeTile(tile);
          }
        });

        worldElement.appendChild(tile);
      }
    }
  }
}

export default World;
